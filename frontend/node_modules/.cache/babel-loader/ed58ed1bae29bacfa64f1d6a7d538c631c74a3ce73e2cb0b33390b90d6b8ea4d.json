{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useAuth.js\nimport { useState, useEffect } from 'react';\nconst useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedUser = localStorage.getItem('mindcare_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const {\n        identifier,\n        password\n      } = credentials;\n      if (identifier === 'admin@mindcare.com' && password === 'admin123') {\n        const adminUser = {\n          id: 'admin',\n          name: 'Administrador',\n          email: 'admin@mindcare.com',\n          role: 'admin',\n          phone: ''\n        };\n        setUser(adminUser);\n        localStorage.setItem('mindcare_user', JSON.stringify(adminUser));\n        return {\n          success: true,\n          user: adminUser\n        };\n      }\n      const mockUser = {\n        id: Date.now().toString(),\n        name: identifier.includes('@') ? identifier.split('@')[0] : 'Usuario',\n        email: identifier.includes('@') ? identifier : '',\n        phone: identifier.includes('@') ? '' : identifier,\n        role: 'user'\n      };\n      setUser(mockUser);\n      localStorage.setItem('mindcare_user', JSON.stringify(mockUser));\n      return {\n        success: true,\n        user: mockUser\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Credenciales inválidas'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('mindcare_user');\n  };\n  return {\n    user,\n    login,\n    logout,\n    loading\n  };\n};\n_s(useAuth, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useAuth","_s","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","credentials","identifier","password","adminUser","id","name","email","role","phone","setItem","stringify","success","mockUser","Date","now","toString","includes","split","error","logout","removeItem"],"sources":["/Users/eduardosierra/Documents/ProAvanzadaProyectos/Proyecto/frontend/src/hooks/useAuth.js"],"sourcesContent":["// hooks/useAuth.js\nimport { useState, useEffect } from 'react';\n\nconst useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem('mindcare_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const { identifier, password } = credentials;\n\n      if (identifier === 'admin@mindcare.com' && password === 'admin123') {\n        const adminUser = {\n          id: 'admin',\n          name: 'Administrador',\n          email: 'admin@mindcare.com',\n          role: 'admin',\n          phone: ''\n        };\n        setUser(adminUser);\n        localStorage.setItem('mindcare_user', JSON.stringify(adminUser));\n        return { success: true, user: adminUser };\n      }\n\n      const mockUser = {\n        id: Date.now().toString(),\n        name: identifier.includes('@') ? identifier.split('@')[0] : 'Usuario',\n        email: identifier.includes('@') ? identifier : '',\n        phone: identifier.includes('@') ? '' : identifier,\n        role: 'user'\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('mindcare_user', JSON.stringify(mockUser));\n      return { success: true, user: mockUser };\n\n    } catch (error) {\n      return { success: false, error: 'Credenciales inválidas' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('mindcare_user');\n  };\n\n  return { user, login, logout, loading };\n};\n\nexport default useAuth;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACvD,IAAIF,SAAS,EAAE;MACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAM;QAAEC,UAAU;QAAEC;MAAS,CAAC,GAAGF,WAAW;MAE5C,IAAIC,UAAU,KAAK,oBAAoB,IAAIC,QAAQ,KAAK,UAAU,EAAE;QAClE,MAAMC,SAAS,GAAG;UAChBC,EAAE,EAAE,OAAO;UACXC,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE,oBAAoB;UAC3BC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;QACT,CAAC;QACDjB,OAAO,CAACY,SAAS,CAAC;QAClBR,YAAY,CAACc,OAAO,CAAC,eAAe,EAAEZ,IAAI,CAACa,SAAS,CAACP,SAAS,CAAC,CAAC;QAChE,OAAO;UAAEQ,OAAO,EAAE,IAAI;UAAErB,IAAI,EAAEa;QAAU,CAAC;MAC3C;MAEA,MAAMS,QAAQ,GAAG;QACfR,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBV,IAAI,EAAEJ,UAAU,CAACe,QAAQ,CAAC,GAAG,CAAC,GAAGf,UAAU,CAACgB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS;QACrEX,KAAK,EAAEL,UAAU,CAACe,QAAQ,CAAC,GAAG,CAAC,GAAGf,UAAU,GAAG,EAAE;QACjDO,KAAK,EAAEP,UAAU,CAACe,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAGf,UAAU;QACjDM,IAAI,EAAE;MACR,CAAC;MAEDhB,OAAO,CAACqB,QAAQ,CAAC;MACjBjB,YAAY,CAACc,OAAO,CAAC,eAAe,EAAEZ,IAAI,CAACa,SAAS,CAACE,QAAQ,CAAC,CAAC;MAC/D,OAAO;QAAED,OAAO,EAAE,IAAI;QAAErB,IAAI,EAAEsB;MAAS,CAAC;IAE1C,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,OAAO;QAAEP,OAAO,EAAE,KAAK;QAAEO,KAAK,EAAE;MAAyB,CAAC;IAC5D;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB5B,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACyB,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;EAED,OAAO;IAAE9B,IAAI;IAAES,KAAK;IAAEoB,MAAM;IAAE3B;EAAQ,CAAC;AACzC,CAAC;AAACH,EAAA,CApDID,OAAO;AAsDb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}