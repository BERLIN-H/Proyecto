from twilio.rest import Client
from django.conf import settings
import logging

logger = logging.getLogger(__name__)

def enviar_confirmacion_cita(appointment):
    """
    Env√≠a confirmaci√≥n de cita por WhatsApp usando Twilio
    """
    try:
        client = Client(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)
        
        mensaje = f"""‚úÖ *CITA CONFIRMADA*

Hola {appointment.client.name},

Tu cita ha sido confirmada:
üìÖ Fecha: {appointment.date.strftime('%d/%m/%Y')}
‚è∞ Hora: {appointment.time.strftime('%H:%M')}
üíº Servicio: {appointment.service.name}
üí∞ Precio: ${appointment.service.price}

üìç Direcci√≥n: [Tu direcci√≥n aqu√≠]
üìû Contacto: {settings.WHATSAPP_BUSINESS_PHONE}

¬°Te esperamos!

---
Para cancelar o reagendar, responde a este mensaje."""

        message = client.messages.create(
            from_=settings.TWILIO_WHATSAPP_FROM,
            body=mensaje,
            to=f'whatsapp:{appointment.client.phone}'
        )
        
        # Actualizar el estado de confirmaci√≥n
        appointment.confirmation_sent = True
        appointment.save()
        
        logger.info(f"Confirmaci√≥n enviada a {appointment.client.name} - SID: {message.sid}")
        return message
        
    except Exception as e:
        logger.error(f"Error enviando confirmaci√≥n WhatsApp: {str(e)}")
        raise e

def enviar_recordatorio_cita(appointment):
    """
    Env√≠a recordatorio de cita por WhatsApp usando Twilio
    """
    try:
        client = Client(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)
        
        mensaje = f"""üîî *RECORDATORIO DE CITA*

Hola {appointment.client.name},

Te recordamos tu cita para ma√±ana:
üìÖ {appointment.date.strftime('%d/%m/%Y')}
‚è∞ {appointment.time.strftime('%H:%M')}
üíº {appointment.service.name}

¬øPodr√°s asistir? Responde:
‚Ä¢ *SI* para confirmar
‚Ä¢ *NO* para cancelar
‚Ä¢ *REAGENDAR* para cambiar fecha

¬°Te esperamos!"""

        message = client.messages.create(
            from_=settings.TWILIO_WHATSAPP_FROM,
            body=mensaje,
            to=f'whatsapp:{appointment.client.phone}'
        )
        
        appointment.reminder_sent = True
        appointment.save()
        
        logger.info(f"Recordatorio enviado a {appointment.client.name} - SID: {message.sid}")
        return message
        
    except Exception as e:
        logger.error(f"Error enviando recordatorio WhatsApp: {str(e)}")
        raise e

def enviar_mensaje_personalizado(phone, mensaje):
    """
    Env√≠a un mensaje personalizado por WhatsApp
    """
    try:
        client = Client(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)
        
        message = client.messages.create(
            from_=settings.TWILIO_WHATSAPP_FROM,
            body=mensaje,
            to=f'whatsapp:{phone}'
        )
        
        logger.info(f"Mensaje personalizado enviado a {phone} - SID: {message.sid}")
        return message
        
    except Exception as e:
        logger.error(f"Error enviando mensaje personalizado: {str(e)}")
        raise e